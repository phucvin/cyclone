;; This file was automatically generated by the Cyclone Scheme compiler
((make-const lambda (expr rename compare) (let* ((base-str (symbol->string (cadr expr))) (fsym (string->symbol (string-append "%" base-str "%"))) (vsym (string->symbol (string-append "*" base-str "*"))) (const-str (caddr expr))) (quasiquote (begin (define (unquote vsym) ((unquote fsym))) (define-c (unquote fsym) "(void *data, int argc, closure _, object k)" (unquote (string-append "return_closcall1(data, k, obj_int2obj(" const-str ")); "))))))) (shutdown-method lambda (expr rename compare) (case (cadr expr) ((read) (quote *shut-rd*)) ((write) (quote *shut-wr*)) (else (error "Unexpected value" (list (quote shutdown-method) (cadr expr)))))) (message-type lambda (expr rename compare) (case (cadr expr) ((none) 0) ((peek) (quote *msg-peek*)) ((oob) (quote *msg-oob*)) ((wait-all) (quote *msg-waitall*)) (else (error "Unexpected value" (list (quote message-type) (cadr expr)))))) (ip-protocol lambda (expr rename compare) (case (cadr expr) ((ip) (quote *ipproto-ip*)) ((tcp) (quote *ipproto-tcp*)) ((udp) (quote *ipproto-udp*)) (else (error "Unexpected value" (list (quote ip-protocol) (cadr expr)))))) (socket-domain lambda (expr rename compare) (case (cadr expr) ((stream) (quote *sock-stream*)) ((datagram) (quote *sock-dgram*)) (else (error "Unexpected value" (list (quote socket-domain) (cadr expr)))))) (address-info lambda (expr rename compare) (case (cadr expr) ((canoname) (quote *ai-canonname*)) ((numerichost) (quote *ai-numerichost*)) ((v4mapped) (quote *ai-v4mapped*)) ((all) (quote *ai-all*)) ((addrconfig) (quote *ai-addrconfig*)) (else (error "Unexpected value" (list (quote address-info) (cadr expr)))))) (address-family lambda (expr rename compare) (case (cadr expr) ((inet) (quote *af-inet*)) ((inet6) (quote *af-inet6*)) ((unspec) (quote *af-unspec*)) (else (error "Unexpected value" (list (quote address-family) (cadr expr)))))) (flags:sym->const lambda (expr rename compare) (quasiquote (define-syntax (unquote (cadr expr)) (er-macro-transformer (lambda (expr rename compare) (case (cadr expr) (unquote-splicing (cddr expr)) (else (error "Unexpected value" (list (quote (unquote (cadr expr))) (cadr expr)))))))))))