;; This file was automatically generated by the Cyclone Scheme compiler
((cmp-op lambda (expr rename compare) (let* ((fnc (cadr expr)) (args "(void* data, int argc, closure _, object k, object i, object j)") (op-str (caddr expr)) (body (string-append " Cyc_check_fixnum(data, i);\n                      Cyc_check_fixnum(data, j);\n                      object result = (obj_obj2int(i) " op-str " obj_obj2int(j)) ? boolean_t : boolean_f;\n                      return_closcall1(data, k, result); "))) (quasiquote (define-c (unquote fnc) (unquote args) (unquote body))))) (bin-num-op lambda (expr rename compare) (let* ((fnc (cadr expr)) (op-str (caddr expr)) (zero-check? (and (> (length expr) 3) (cadddr expr))) (args "(void* data, int argc, closure _, object k, object i, object j)") (body (string-append " Cyc_check_fixnum(data, i);\n                      Cyc_check_fixnum(data, j); " (if zero-check? " if (obj_obj2int(j) == 0) { Cyc_rt_raise_msg(data, \"Divide by zero\");}" "") " object result = obj_int2obj(obj_obj2int(i) " op-str " obj_obj2int(j));\n                      return_closcall1(data, k, result); "))) (quasiquote (define-c (unquote fnc) (unquote args) (unquote body))))))