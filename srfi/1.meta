;; This file was automatically generated by the Cyclone Scheme compiler
((:optional lambda (expr$12$25 rename$13$26 compare$14$27) (car ((lambda (tmp$29$31) (if tmp$29$31 tmp$29$31 (cons (error/loc "no expansion for" expr$12$25) #f))) ((lambda (v.1$20$32) (if (pair? v.1$20$32) ((lambda (v.2$21$34) ((lambda (rest$35) ((lambda (v.3$22$36) (if (pair? v.3$22$36) ((lambda (v.4$23$38) ((lambda (default-exp$39) ((lambda (v.5$24$40) (if (null? v.5$24$40) (cons (cons-source (rename$13$26 (quote let)) (cons-source (cons-source (cons-source (rename$13$26 (quote maybe-arg)) (cons-source rest$35 (quote ()) (quote (rest))) (quote (maybe-arg rest))) (quote ()) (quote ((maybe-arg rest)))) (cons-source (cons-source (rename$13$26 (quote cond)) (cons-source (cons-source (cons-source (rename$13$26 (quote null?)) (cons-source (rename$13$26 (quote maybe-arg)) (quote ()) (quote (maybe-arg))) (quote (null? maybe-arg))) (cons-source default-exp$39 (quote ()) (quote (default-exp))) (quote ((null? maybe-arg) default-exp))) (cons-source (cons-source (cons-source (rename$13$26 (quote null?)) (cons-source (cons-source (rename$13$26 (quote cdr)) (cons-source (rename$13$26 (quote maybe-arg)) (quote ()) (quote (maybe-arg))) (quote (cdr maybe-arg))) (quote ()) (quote ((cdr maybe-arg)))) (quote (null? (cdr maybe-arg)))) (cons-source (cons-source (rename$13$26 (quote car)) (cons-source (rename$13$26 (quote maybe-arg)) (quote ()) (quote (maybe-arg))) (quote (car maybe-arg))) (quote ()) (quote ((car maybe-arg)))) (quote ((null? (cdr maybe-arg)) (car maybe-arg)))) (cons-source (cons-source (rename$13$26 (quote else)) (cons-source (cons-source (rename$13$26 (quote error)) (cons-source "too many optional arguments" (cons-source (rename$13$26 (quote maybe-arg)) (quote ()) (quote (maybe-arg))) (quote ("too many optional arguments" maybe-arg))) (quote (error "too many optional arguments" maybe-arg))) (quote ()) (quote ((error "too many optional arguments" maybe-arg)))) (quote (else (error "too many optional arguments" maybe-arg)))) (quote ()) (quote ((else (error "too many optional arguments" maybe-arg))))) (quote (((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg))))) (quote (((null? maybe-arg) default-exp) ((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg))))) (quote (cond ((null? maybe-arg) default-exp) ((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg))))) (quote ()) (quote ((cond ((null? maybe-arg) default-exp) ((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg)))))) (quote (((maybe-arg rest)) (cond ((null? maybe-arg) default-exp) ((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg)))))) (quote (let ((maybe-arg rest)) (cond ((null? maybe-arg) default-exp) ((null? (cdr maybe-arg)) (car maybe-arg)) (else (error "too many optional arguments" maybe-arg)))))) #f) #f)) (cdr v.3$22$36))) v.4$23$38)) (car v.3$22$36)) #f)) (cdr v.1$20$32))) v.2$21$34)) (car v.1$20$32)) #f)) (cdr expr$12$25))))))